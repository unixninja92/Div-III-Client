// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./pond.proto
package systems.obscure.servertesting.protos;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.FIXED32;
import static com.squareup.wire.Message.Datatype.FIXED64;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * Delivery is a request from a client to deliver a message to an account on
 * this server. There's no explicit reply protobuf for this request. Success is
 * indicated via |status|.
 */
public final class Delivery extends Message {

  public static final ByteString DEFAULT_TO = ByteString.EMPTY;
  public static final ByteString DEFAULT_GROUP_SIGNATURE = ByteString.EMPTY;
  public static final Integer DEFAULT_GENERATION = 0;
  public static final ByteString DEFAULT_MESSAGE = ByteString.EMPTY;
  public static final ByteString DEFAULT_ONE_TIME_PUBLIC_KEY = ByteString.EMPTY;
  public static final Long DEFAULT_HMAC_OF_PUBLIC_KEY = 0L;
  public static final ByteString DEFAULT_ONE_TIME_SIGNATURE = ByteString.EMPTY;

  /**
   * The 32-byte, public identity of the target account.
   */
  @ProtoField(tag = 1, type = BYTES, label = REQUIRED)
  public final ByteString to;

  /**
   * A group signature of |message| proving authorisation to deliver
   * messages to the account.
   */
  @ProtoField(tag = 2, type = BYTES)
  public final ByteString group_signature;

  /**
   * The current generation number in order for the server to send
   * revocation updates.
   */
  @ProtoField(tag = 3, type = FIXED32)
  public final Integer generation;

  /**
   * The padded message to deliver.
   */
  @ProtoField(tag = 4, type = BYTES, label = REQUIRED)
  public final ByteString message;

  /**
   * one_time_public_key contains an Ed25519 public key that was issued
   * by the recipient in order to authenticate delivery attempts.
   */
  @ProtoField(tag = 5, type = BYTES)
  public final ByteString one_time_public_key;

  /**
   * hmac_of_public_key contains a 63-bit HMAC of public key using the
   * HMAC key known to server and recipient.
   */
  @ProtoField(tag = 6, type = FIXED64)
  public final Long hmac_of_public_key;

  /**
   * one_time_signature contains a signature, by public_key, of message.
   */
  @ProtoField(tag = 7, type = BYTES)
  public final ByteString one_time_signature;

  public Delivery(ByteString to, ByteString group_signature, Integer generation, ByteString message, ByteString one_time_public_key, Long hmac_of_public_key, ByteString one_time_signature) {
    this.to = to;
    this.group_signature = group_signature;
    this.generation = generation;
    this.message = message;
    this.one_time_public_key = one_time_public_key;
    this.hmac_of_public_key = hmac_of_public_key;
    this.one_time_signature = one_time_signature;
  }

  private Delivery(Builder builder) {
    this(builder.to, builder.group_signature, builder.generation, builder.message, builder.one_time_public_key, builder.hmac_of_public_key, builder.one_time_signature);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Delivery)) return false;
    Delivery o = (Delivery) other;
    return equals(to, o.to)
        && equals(group_signature, o.group_signature)
        && equals(generation, o.generation)
        && equals(message, o.message)
        && equals(one_time_public_key, o.one_time_public_key)
        && equals(hmac_of_public_key, o.hmac_of_public_key)
        && equals(one_time_signature, o.one_time_signature);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = to != null ? to.hashCode() : 0;
      result = result * 37 + (group_signature != null ? group_signature.hashCode() : 0);
      result = result * 37 + (generation != null ? generation.hashCode() : 0);
      result = result * 37 + (message != null ? message.hashCode() : 0);
      result = result * 37 + (one_time_public_key != null ? one_time_public_key.hashCode() : 0);
      result = result * 37 + (hmac_of_public_key != null ? hmac_of_public_key.hashCode() : 0);
      result = result * 37 + (one_time_signature != null ? one_time_signature.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Delivery> {

    public ByteString to;
    public ByteString group_signature;
    public Integer generation;
    public ByteString message;
    public ByteString one_time_public_key;
    public Long hmac_of_public_key;
    public ByteString one_time_signature;

    public Builder() {
    }

    public Builder(Delivery message) {
      super(message);
      if (message == null) return;
      this.to = message.to;
      this.group_signature = message.group_signature;
      this.generation = message.generation;
      this.message = message.message;
      this.one_time_public_key = message.one_time_public_key;
      this.hmac_of_public_key = message.hmac_of_public_key;
      this.one_time_signature = message.one_time_signature;
    }

    /**
     * The 32-byte, public identity of the target account.
     */
    public Builder to(ByteString to) {
      this.to = to;
      return this;
    }

    /**
     * A group signature of |message| proving authorisation to deliver
     * messages to the account.
     */
    public Builder group_signature(ByteString group_signature) {
      this.group_signature = group_signature;
      return this;
    }

    /**
     * The current generation number in order for the server to send
     * revocation updates.
     */
    public Builder generation(Integer generation) {
      this.generation = generation;
      return this;
    }

    /**
     * The padded message to deliver.
     */
    public Builder message(ByteString message) {
      this.message = message;
      return this;
    }

    /**
     * one_time_public_key contains an Ed25519 public key that was issued
     * by the recipient in order to authenticate delivery attempts.
     */
    public Builder one_time_public_key(ByteString one_time_public_key) {
      this.one_time_public_key = one_time_public_key;
      return this;
    }

    /**
     * hmac_of_public_key contains a 63-bit HMAC of public key using the
     * HMAC key known to server and recipient.
     */
    public Builder hmac_of_public_key(Long hmac_of_public_key) {
      this.hmac_of_public_key = hmac_of_public_key;
      return this;
    }

    /**
     * one_time_signature contains a signature, by public_key, of message.
     */
    public Builder one_time_signature(ByteString one_time_signature) {
      this.one_time_signature = one_time_signature;
      return this;
    }

    @Override
    public Delivery build() {
      checkRequiredFields();
      return new Delivery(this);
    }
  }
}
