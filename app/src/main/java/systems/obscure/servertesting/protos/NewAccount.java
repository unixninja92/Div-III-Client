// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./pond.proto
package systems.obscure.servertesting.protos;

import com.google.common.primitives.UnsignedInteger;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.FIXED32;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * NewAccount is a request that the client may send to the server to request a
 * new account. The public identity of the connecting client will be the `name'
 * of the new account.
 */
public final class NewAccount extends Message {

  public static final UnsignedInteger DEFAULT_GENERATION = UnsignedInteger.valueOf(0);
  public static final ByteString DEFAULT_GROUP = ByteString.EMPTY;
  public static final ByteString DEFAULT_HMAC_KEY = ByteString.EMPTY;

  /**
   * generation contains the revocation generation for the account. The
   * client should pick it at random in order to hide the number of
   * revocations that the client has performed.
   */
  @ProtoField(tag = 1, type = FIXED32, label = REQUIRED)
  public final UnsignedInteger generation;

  /**
   * group contains the serialised bbssig.Group for authenticating
   * deliveries to this account.
   */
  @ProtoField(tag = 2, type = BYTES, label = REQUIRED)
  public final ByteString group;

  /**
   * hmac_key contains an HMAC key used to authenticate delivery
   * attempts.
   */
  @ProtoField(tag = 3, type = BYTES)
  public final ByteString hmac_key;

  public NewAccount(UnsignedInteger generation, ByteString group, ByteString hmac_key) {
    this.generation = generation;
    this.group = group;
    this.hmac_key = hmac_key;
  }

  private NewAccount(Builder builder) {
    this(builder.generation, builder.group, builder.hmac_key);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NewAccount)) return false;
    NewAccount o = (NewAccount) other;
    return equals(generation, o.generation)
        && equals(group, o.group)
        && equals(hmac_key, o.hmac_key);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = generation != null ? generation.hashCode() : 0;
      result = result * 37 + (group != null ? group.hashCode() : 0);
      result = result * 37 + (hmac_key != null ? hmac_key.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<NewAccount> {

    public UnsignedInteger generation;
    public ByteString group;
    public ByteString hmac_key;

    public Builder() {
    }

    public Builder(NewAccount message) {
      super(message);
      if (message == null) return;
      this.generation = message.generation;
      this.group = message.group;
      this.hmac_key = message.hmac_key;
    }

    /**
     * generation contains the revocation generation for the account. The
     * client should pick it at random in order to hide the number of
     * revocations that the client has performed.
     */
    public Builder generation(UnsignedInteger generation) {
      this.generation = generation;
      return this;
    }

    /**
     * group contains the serialised bbssig.Group for authenticating
     * deliveries to this account.
     */
    public Builder group(ByteString group) {
      this.group = group;
      return this;
    }

    /**
     * hmac_key contains an HMAC key used to authenticate delivery
     * attempts.
     */
    public Builder hmac_key(ByteString hmac_key) {
      this.hmac_key = hmac_key;
      return this;
    }

    @Override
    public NewAccount build() {
      checkRequiredFields();
      return new NewAccount(this);
    }
  }
}
