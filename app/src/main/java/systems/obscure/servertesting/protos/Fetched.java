// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./pond.proto
package systems.obscure.servertesting.protos;

import com.google.common.primitives.UnsignedInteger;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.FIXED32;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * Fetched is the reply to a Fetch request if the server has a message for
 * delivery.
 */
public final class Fetched extends Message {

  public static final ByteString DEFAULT_GROUP_SIGNATURE = ByteString.EMPTY;
  public static final UnsignedInteger DEFAULT_GENERATION = UnsignedInteger.valueOf(0);
  public static final ByteString DEFAULT_MESSAGE = ByteString.EMPTY;

  /**
   * group_signature is the group signature presented by the sender.
   */
  @ProtoField(tag = 1, type = BYTES, label = REQUIRED)
  public final ByteString group_signature;

  /**
   * generation is the generation number used for delivery.
   */
  @ProtoField(tag = 2, type = FIXED32, label = REQUIRED)
  public final UnsignedInteger generation;

  @ProtoField(tag = 3, type = BYTES, label = REQUIRED)
  public final ByteString message;

  @ProtoField(tag = 4, label = REQUIRED)
  public final AccountDetails details;

  public Fetched(ByteString group_signature, UnsignedInteger generation, ByteString message, AccountDetails details) {
    this.group_signature = group_signature;
    this.generation = generation;
    this.message = message;
    this.details = details;
  }

  private Fetched(Builder builder) {
    this(builder.group_signature, builder.generation, builder.message, builder.details);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Fetched)) return false;
    Fetched o = (Fetched) other;
    return equals(group_signature, o.group_signature)
        && equals(generation, o.generation)
        && equals(message, o.message)
        && equals(details, o.details);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = group_signature != null ? group_signature.hashCode() : 0;
      result = result * 37 + (generation != null ? generation.hashCode() : 0);
      result = result * 37 + (message != null ? message.hashCode() : 0);
      result = result * 37 + (details != null ? details.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Fetched> {

    public ByteString group_signature;
    public UnsignedInteger generation;
    public ByteString message;
    public AccountDetails details;

    public Builder() {
    }

    public Builder(Fetched message) {
      super(message);
      if (message == null) return;
      this.group_signature = message.group_signature;
      this.generation = message.generation;
      this.message = message.message;
      this.details = message.details;
    }

    /**
     * group_signature is the group signature presented by the sender.
     */
    public Builder group_signature(ByteString group_signature) {
      this.group_signature = group_signature;
      return this;
    }

    /**
     * generation is the generation number used for delivery.
     */
    public Builder generation(UnsignedInteger generation) {
      this.generation = generation;
      return this;
    }

    public Builder message(ByteString message) {
      this.message = message;
      return this;
    }

    public Builder details(AccountDetails details) {
      this.details = details;
      return this;
    }

    @Override
    public Fetched build() {
      checkRequiredFields();
      return new Fetched(this);
    }
  }
}
