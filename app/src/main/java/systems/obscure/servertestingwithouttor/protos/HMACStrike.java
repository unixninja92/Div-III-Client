// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./pond.proto
package systems.obscure.servertestingwithouttor.protos;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.FIXED64;
import static com.squareup.wire.Message.Label.PACKED;

/**
 * HMACStrike is used by a client to record a number of HMAC values as used.
 */
public final class HMACStrike extends Message {

  public static final List<Long> DEFAULT_HMACS = Collections.emptyList();

  /**
   * hmacs contains a number of 63-bit HMACs. The MSB is used to signal
   * whether the HMAC should be considered used (0) or revoked (1).
   */
  @ProtoField(tag = 1, type = FIXED64, label = PACKED)
  public final List<Long> hmacs;

  public HMACStrike(List<Long> hmacs) {
    this.hmacs = immutableCopyOf(hmacs);
  }

  private HMACStrike(Builder builder) {
    this(builder.hmacs);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof HMACStrike)) return false;
    return equals(hmacs, ((HMACStrike) other).hmacs);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = hmacs != null ? hmacs.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<HMACStrike> {

    public List<Long> hmacs;

    public Builder() {
    }

    public Builder(HMACStrike message) {
      super(message);
      if (message == null) return;
      this.hmacs = copyOf(message.hmacs);
    }

    /**
     * hmacs contains a number of 63-bit HMACs. The MSB is used to signal
     * whether the HMAC should be considered used (0) or revoked (1).
     */
    public Builder hmacs(List<Long> hmacs) {
      this.hmacs = checkForNulls(hmacs);
      return this;
    }

    @Override
    public HMACStrike build() {
      return new HMACStrike(this);
    }
  }
}
